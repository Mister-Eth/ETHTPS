/* tslint:disable */
/* eslint-disable */
/**
 * ETHTPS.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ProviderDetailsMarkdownPage } from './ProviderDetailsMarkdownPage';
import {
    ProviderDetailsMarkdownPageFromJSON,
    ProviderDetailsMarkdownPageFromJSONTyped,
    ProviderDetailsMarkdownPageToJSON,
} from './ProviderDetailsMarkdownPage';

/**
 * 
 * @export
 * @interface MarkdownPage
 */
export interface MarkdownPage {
    /**
     * 
     * @type {number}
     * @memberof MarkdownPage
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof MarkdownPage
     */
    rawMarkdown?: string | null;
    /**
     * 
     * @type {Array<ProviderDetailsMarkdownPage>}
     * @memberof MarkdownPage
     */
    readonly providerDetailsMarkdownPages?: Array<ProviderDetailsMarkdownPage> | null;
}

/**
 * Check if a given object implements the MarkdownPage interface.
 */
export function instanceOfMarkdownPage(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function MarkdownPageFromJSON(json: any): MarkdownPage {
    return MarkdownPageFromJSONTyped(json, false);
}

export function MarkdownPageFromJSONTyped(json: any, ignoreDiscriminator: boolean): MarkdownPage {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'rawMarkdown': !exists(json, 'rawMarkdown') ? undefined : json['rawMarkdown'],
        'providerDetailsMarkdownPages': !exists(json, 'providerDetailsMarkdownPages') ? undefined : (json['providerDetailsMarkdownPages'] === null ? null : (json['providerDetailsMarkdownPages'] as Array<any>).map(ProviderDetailsMarkdownPageFromJSON)),
    };
}

export function MarkdownPageToJSON(value?: MarkdownPage | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'rawMarkdown': value.rawMarkdown,
    };
}

