/* tslint:disable */
/* eslint-disable */
/**
 * ETHTPS.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ExternalWebsite } from './ExternalWebsite';
import {
    ExternalWebsiteFromJSON,
    ExternalWebsiteFromJSONTyped,
    ExternalWebsiteToJSON,
} from './ExternalWebsite';

/**
 * 
 * @export
 * @interface ExternalWebsiteCateopry
 */
export interface ExternalWebsiteCateopry {
    /**
     * 
     * @type {number}
     * @memberof ExternalWebsiteCateopry
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof ExternalWebsiteCateopry
     */
    name?: string | null;
    /**
     * 
     * @type {Array<ExternalWebsite>}
     * @memberof ExternalWebsiteCateopry
     */
    readonly externalWebsites?: Array<ExternalWebsite> | null;
}

/**
 * Check if a given object implements the ExternalWebsiteCateopry interface.
 */
export function instanceOfExternalWebsiteCateopry(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ExternalWebsiteCateopryFromJSON(json: any): ExternalWebsiteCateopry {
    return ExternalWebsiteCateopryFromJSONTyped(json, false);
}

export function ExternalWebsiteCateopryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExternalWebsiteCateopry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'externalWebsites': !exists(json, 'externalWebsites') ? undefined : (json['externalWebsites'] === null ? null : (json['externalWebsites'] as Array<any>).map(ExternalWebsiteFromJSON)),
    };
}

export function ExternalWebsiteCateopryToJSON(value?: ExternalWebsiteCateopry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
    };
}

