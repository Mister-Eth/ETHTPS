/* tslint:disable */
/* eslint-disable */
/**
 * ETHTPS.info API
 * Backend definition for ethtps.info; you\'re free to play around
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { IXYMultiConvertible } from './IXYMultiConvertible';
import {
    IXYMultiConvertibleFromJSON,
    IXYMultiConvertibleFromJSONTyped,
    IXYMultiConvertibleToJSON,
} from './IXYMultiConvertible';

/**
 * 
 * @export
 * @interface ComplexDatasetAnalysis
 */
export interface ComplexDatasetAnalysis {
    /**
     * 
     * @type {IXYMultiConvertible}
     * @memberof ComplexDatasetAnalysis
     */
    max?: IXYMultiConvertible;
    /**
     * 
     * @type {IXYMultiConvertible}
     * @memberof ComplexDatasetAnalysis
     */
    min?: IXYMultiConvertible;
    /**
     * 
     * @type {number}
     * @memberof ComplexDatasetAnalysis
     */
    mean?: number;
}

/**
 * Check if a given object implements the ComplexDatasetAnalysis interface.
 */
export function instanceOfComplexDatasetAnalysis(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ComplexDatasetAnalysisFromJSON(json: any): ComplexDatasetAnalysis {
    return ComplexDatasetAnalysisFromJSONTyped(json, false);
}

export function ComplexDatasetAnalysisFromJSONTyped(json: any, ignoreDiscriminator: boolean): ComplexDatasetAnalysis {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'max': !exists(json, 'max') ? undefined : IXYMultiConvertibleFromJSON(json['max']),
        'min': !exists(json, 'min') ? undefined : IXYMultiConvertibleFromJSON(json['min']),
        'mean': !exists(json, 'mean') ? undefined : json['mean'],
    };
}

export function ComplexDatasetAnalysisToJSON(value?: ComplexDatasetAnalysis | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'max': IXYMultiConvertibleToJSON(value.max),
        'min': IXYMultiConvertibleToJSON(value.min),
        'mean': value.mean,
    };
}

