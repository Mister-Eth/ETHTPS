/* tslint:disable */
/* eslint-disable */
/**
 * ETHTPS.info API
 * Backend definition for ethtps.info; you\'re free to play around
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TimeInterval } from './TimeInterval';
import {
    TimeIntervalFromJSON,
    TimeIntervalFromJSONTyped,
    TimeIntervalToJSON,
} from './TimeInterval';

/**
 * 
 * @export
 * @interface BucketOptions
 */
export interface BucketOptions {
    /**
     * 
     * @type {boolean}
     * @memberof BucketOptions
     */
    useTimeBuckets?: boolean;
    /**
     * 
     * @type {TimeInterval}
     * @memberof BucketOptions
     */
    bucketSize?: TimeInterval;
    /**
     * 
     * @type {string}
     * @memberof BucketOptions
     */
    customBucketSize?: string | null;
}

/**
 * Check if a given object implements the BucketOptions interface.
 */
export function instanceOfBucketOptions(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function BucketOptionsFromJSON(json: any): BucketOptions {
    return BucketOptionsFromJSONTyped(json, false);
}

export function BucketOptionsFromJSONTyped(json: any, ignoreDiscriminator: boolean): BucketOptions {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'useTimeBuckets': !exists(json, 'useTimeBuckets') ? undefined : json['useTimeBuckets'],
        'bucketSize': !exists(json, 'bucketSize') ? undefined : TimeIntervalFromJSON(json['bucketSize']),
        'customBucketSize': !exists(json, 'customBucketSize') ? undefined : json['customBucketSize'],
    };
}

export function BucketOptionsToJSON(value?: BucketOptions | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'useTimeBuckets': value.useTimeBuckets,
        'bucketSize': TimeIntervalToJSON(value.bucketSize),
        'customBucketSize': value.customBucketSize,
    };
}

