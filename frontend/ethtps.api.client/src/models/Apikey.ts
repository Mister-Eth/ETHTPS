/* tslint:disable */
/* eslint-disable */
/**
 * ETHTPS.info API
 * Backend definition for ethtps.info; you\'re free to play around
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ApikeyExperimentBinding } from './ApikeyExperimentBinding';
import {
    ApikeyExperimentBindingFromJSON,
    ApikeyExperimentBindingFromJSONTyped,
    ApikeyExperimentBindingToJSON,
} from './ApikeyExperimentBinding';
import type { ApikeyGroup } from './ApikeyGroup';
import {
    ApikeyGroupFromJSON,
    ApikeyGroupFromJSONTyped,
    ApikeyGroupToJSON,
} from './ApikeyGroup';

/**
 * 
 * @export
 * @interface Apikey
 */
export interface Apikey {
    /**
     * 
     * @type {number}
     * @memberof Apikey
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof Apikey
     */
    keyHash?: string | null;
    /**
     * 
     * @type {number}
     * @memberof Apikey
     */
    totalCalls?: number;
    /**
     * 
     * @type {number}
     * @memberof Apikey
     */
    callsLast24h?: number;
    /**
     * 
     * @type {number}
     * @memberof Apikey
     */
    limit24h?: number;
    /**
     * 
     * @type {string}
     * @memberof Apikey
     */
    requesterIpaddress?: string | null;
    /**
     * 
     * @type {Array<ApikeyExperimentBinding>}
     * @memberof Apikey
     */
    readonly apikeyExperimentBindings?: Array<ApikeyExperimentBinding> | null;
    /**
     * 
     * @type {Array<ApikeyGroup>}
     * @memberof Apikey
     */
    readonly apikeyGroups?: Array<ApikeyGroup> | null;
}

/**
 * Check if a given object implements the Apikey interface.
 */
export function instanceOfApikey(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ApikeyFromJSON(json: any): Apikey {
    return ApikeyFromJSONTyped(json, false);
}

export function ApikeyFromJSONTyped(json: any, ignoreDiscriminator: boolean): Apikey {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'keyHash': !exists(json, 'keyHash') ? undefined : json['keyHash'],
        'totalCalls': !exists(json, 'totalCalls') ? undefined : json['totalCalls'],
        'callsLast24h': !exists(json, 'callsLast24h') ? undefined : json['callsLast24h'],
        'limit24h': !exists(json, 'limit24h') ? undefined : json['limit24h'],
        'requesterIpaddress': !exists(json, 'requesterIpaddress') ? undefined : json['requesterIpaddress'],
        'apikeyExperimentBindings': !exists(json, 'apikeyExperimentBindings') ? undefined : (json['apikeyExperimentBindings'] === null ? null : (json['apikeyExperimentBindings'] as Array<any>).map(ApikeyExperimentBindingFromJSON)),
        'apikeyGroups': !exists(json, 'apikeyGroups') ? undefined : (json['apikeyGroups'] === null ? null : (json['apikeyGroups'] as Array<any>).map(ApikeyGroupFromJSON)),
    };
}

export function ApikeyToJSON(value?: Apikey | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'keyHash': value.keyHash,
        'totalCalls': value.totalCalls,
        'callsLast24h': value.callsLast24h,
        'limit24h': value.limit24h,
        'requesterIpaddress': value.requesterIpaddress,
    };
}

