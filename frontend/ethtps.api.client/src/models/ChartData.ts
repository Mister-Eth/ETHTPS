/* tslint:disable */
/* eslint-disable */
/**
 * ETHTPS.info API
 * Backend definition for ethtps.info; you\'re free to play around
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DataResponseModel } from './DataResponseModel';
import {
    DataResponseModelFromJSON,
    DataResponseModelFromJSONTyped,
    DataResponseModelToJSON,
} from './DataResponseModel';
import type { DataType } from './DataType';
import {
    DataTypeFromJSON,
    DataTypeFromJSONTyped,
    DataTypeToJSON,
} from './DataType';

/**
 * 
 * @export
 * @interface ChartData
 */
export interface ChartData {
    /**
     * 
     * @type {{ [key: string]: Array<DataResponseModel>; }}
     * @memberof ChartData
     */
    data?: { [key: string]: Array<DataResponseModel>; } | null;
    /**
     * 
     * @type {DataType}
     * @memberof ChartData
     */
    dataType?: DataType;
}

/**
 * Check if a given object implements the ChartData interface.
 */
export function instanceOfChartData(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ChartDataFromJSON(json: any): ChartData {
    return ChartDataFromJSONTyped(json, false);
}

export function ChartDataFromJSONTyped(json: any, ignoreDiscriminator: boolean): ChartData {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': !exists(json, 'data') ? undefined : json['data'],
        'dataType': !exists(json, 'dataType') ? undefined : DataTypeFromJSON(json['dataType']),
    };
}

export function ChartDataToJSON(value?: ChartData | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': value.data,
        'dataType': DataTypeToJSON(value.dataType),
    };
}

