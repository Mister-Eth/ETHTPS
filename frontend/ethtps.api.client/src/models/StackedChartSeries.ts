/* tslint:disable */
/* eslint-disable */
/**
 * ETHTPS.info API
 * Backend definition for ethtps.info; you\'re free to play around
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { StackedChartDataPoint } from './StackedChartDataPoint';
import {
    StackedChartDataPointFromJSON,
    StackedChartDataPointFromJSONTyped,
    StackedChartDataPointToJSON,
} from './StackedChartDataPoint';

/**
 * 
 * @export
 * @interface StackedChartSeries
 */
export interface StackedChartSeries {
    /**
     * 
     * @type {Array<StackedChartDataPoint>}
     * @memberof StackedChartSeries
     */
    dataPoints?: Array<StackedChartDataPoint> | null;
    /**
     * 
     * @type {number}
     * @memberof StackedChartSeries
     */
    readonly maxValue?: number;
    /**
     * 
     * @type {string}
     * @memberof StackedChartSeries
     */
    provider?: string | null;
}

/**
 * Check if a given object implements the StackedChartSeries interface.
 */
export function instanceOfStackedChartSeries(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StackedChartSeriesFromJSON(json: any): StackedChartSeries {
    return StackedChartSeriesFromJSONTyped(json, false);
}

export function StackedChartSeriesFromJSONTyped(json: any, ignoreDiscriminator: boolean): StackedChartSeries {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'dataPoints': !exists(json, 'dataPoints') ? undefined : (json['dataPoints'] === null ? null : (json['dataPoints'] as Array<any>).map(StackedChartDataPointFromJSON)),
        'maxValue': !exists(json, 'maxValue') ? undefined : json['maxValue'],
        'provider': !exists(json, 'provider') ? undefined : json['provider'],
    };
}

export function StackedChartSeriesToJSON(value?: StackedChartSeries | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'dataPoints': value.dataPoints === undefined ? undefined : (value.dataPoints === null ? null : (value.dataPoints as Array<any>).map(StackedChartDataPointToJSON)),
        'provider': value.provider,
    };
}

