/* tslint:disable */
/* eslint-disable */
/**
 * ETHTPS.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { DataUpdater } from './DataUpdater';
import {
    DataUpdaterFromJSON,
    DataUpdaterFromJSONTyped,
    DataUpdaterToJSON,
} from './DataUpdater';
import type { DataUpdaterStatus } from './DataUpdaterStatus';
import {
    DataUpdaterStatusFromJSON,
    DataUpdaterStatusFromJSONTyped,
    DataUpdaterStatusToJSON,
} from './DataUpdaterStatus';

/**
 * 
 * @export
 * @interface LiveDataUpdaterStatus
 */
export interface LiveDataUpdaterStatus {
    /**
     * 
     * @type {number}
     * @memberof LiveDataUpdaterStatus
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof LiveDataUpdaterStatus
     */
    updaterId?: number;
    /**
     * 
     * @type {number}
     * @memberof LiveDataUpdaterStatus
     */
    statusId?: number;
    /**
     * 
     * @type {Date}
     * @memberof LiveDataUpdaterStatus
     */
    lastSuccessfulRunTime?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof LiveDataUpdaterStatus
     */
    lastRunTime?: Date | null;
    /**
     * 
     * @type {number}
     * @memberof LiveDataUpdaterStatus
     */
    numberOfSuccesses?: number;
    /**
     * 
     * @type {number}
     * @memberof LiveDataUpdaterStatus
     */
    numberOfFailures?: number;
    /**
     * 
     * @type {DataUpdaterStatus}
     * @memberof LiveDataUpdaterStatus
     */
    status?: DataUpdaterStatus;
    /**
     * 
     * @type {DataUpdater}
     * @memberof LiveDataUpdaterStatus
     */
    updater?: DataUpdater;
}

/**
 * Check if a given object implements the LiveDataUpdaterStatus interface.
 */
export function instanceOfLiveDataUpdaterStatus(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function LiveDataUpdaterStatusFromJSON(json: any): LiveDataUpdaterStatus {
    return LiveDataUpdaterStatusFromJSONTyped(json, false);
}

export function LiveDataUpdaterStatusFromJSONTyped(json: any, ignoreDiscriminator: boolean): LiveDataUpdaterStatus {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'updaterId': !exists(json, 'updaterId') ? undefined : json['updaterId'],
        'statusId': !exists(json, 'statusId') ? undefined : json['statusId'],
        'lastSuccessfulRunTime': !exists(json, 'lastSuccessfulRunTime') ? undefined : (json['lastSuccessfulRunTime'] === null ? null : new Date(json['lastSuccessfulRunTime'])),
        'lastRunTime': !exists(json, 'lastRunTime') ? undefined : (json['lastRunTime'] === null ? null : new Date(json['lastRunTime'])),
        'numberOfSuccesses': !exists(json, 'numberOfSuccesses') ? undefined : json['numberOfSuccesses'],
        'numberOfFailures': !exists(json, 'numberOfFailures') ? undefined : json['numberOfFailures'],
        'status': !exists(json, 'status') ? undefined : DataUpdaterStatusFromJSON(json['status']),
        'updater': !exists(json, 'updater') ? undefined : DataUpdaterFromJSON(json['updater']),
    };
}

export function LiveDataUpdaterStatusToJSON(value?: LiveDataUpdaterStatus | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'updaterId': value.updaterId,
        'statusId': value.statusId,
        'lastSuccessfulRunTime': value.lastSuccessfulRunTime === undefined ? undefined : (value.lastSuccessfulRunTime === null ? null : value.lastSuccessfulRunTime.toISOString()),
        'lastRunTime': value.lastRunTime === undefined ? undefined : (value.lastRunTime === null ? null : value.lastRunTime.toISOString()),
        'numberOfSuccesses': value.numberOfSuccesses,
        'numberOfFailures': value.numberOfFailures,
        'status': DataUpdaterStatusToJSON(value.status),
        'updater': DataUpdaterToJSON(value.updater),
    };
}

