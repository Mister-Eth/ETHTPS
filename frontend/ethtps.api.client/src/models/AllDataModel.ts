/* tslint:disable */
/* eslint-disable */
/**
 * ETHTPS.info API
 * Backend definition for ethtps.info; you\'re free to play around
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { AllDataModelAllTPSData } from './AllDataModelAllTPSData';
import {
    AllDataModelAllTPSDataFromJSON,
    AllDataModelAllTPSDataFromJSONTyped,
    AllDataModelAllTPSDataToJSON,
} from './AllDataModelAllTPSData';
import type { ProviderModel } from './ProviderModel';
import {
    ProviderModelFromJSON,
    ProviderModelFromJSONTyped,
    ProviderModelToJSON,
} from './ProviderModel';

/**
 * 
 * @export
 * @interface AllDataModel
 */
export interface AllDataModel {
    /**
     * 
     * @type {Array<ProviderModel>}
     * @memberof AllDataModel
     */
    providers?: Array<ProviderModel> | null;
    /**
     * 
     * @type {{ [key: string]: any; }}
     * @memberof AllDataModel
     */
    maxData?: { [key: string]: any; } | null;
    /**
     * 
     * @type {AllDataModelAllTPSData}
     * @memberof AllDataModel
     */
    allTPSData?: AllDataModelAllTPSData | null;
    /**
     * 
     * @type {AllDataModelAllTPSData}
     * @memberof AllDataModel
     */
    allGPSData?: AllDataModelAllTPSData | null;
    /**
     * 
     * @type {AllDataModelAllTPSData}
     * @memberof AllDataModel
     */
    allGasAdjustedTPSData?: AllDataModelAllTPSData | null;
}

/**
 * Check if a given object implements the AllDataModel interface.
 */
export function instanceOfAllDataModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function AllDataModelFromJSON(json: any): AllDataModel {
    return AllDataModelFromJSONTyped(json, false);
}

export function AllDataModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): AllDataModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'providers': !exists(json, 'providers') ? undefined : (json['providers'] === null ? null : (json['providers'] as Array<any>).map(ProviderModelFromJSON)),
        'maxData': !exists(json, 'maxData') ? undefined : json['maxData'],
        'allTPSData': !exists(json, 'allTPSData') ? undefined : AllDataModelAllTPSDataFromJSON(json['allTPSData']),
        'allGPSData': !exists(json, 'allGPSData') ? undefined : AllDataModelAllTPSDataFromJSON(json['allGPSData']),
        'allGasAdjustedTPSData': !exists(json, 'allGasAdjustedTPSData') ? undefined : AllDataModelAllTPSDataFromJSON(json['allGasAdjustedTPSData']),
    };
}

export function AllDataModelToJSON(value?: AllDataModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'providers': value.providers === undefined ? undefined : (value.providers === null ? null : (value.providers as Array<any>).map(ProviderModelToJSON)),
        'maxData': value.maxData,
        'allTPSData': AllDataModelAllTPSDataToJSON(value.allTPSData),
        'allGPSData': AllDataModelAllTPSDataToJSON(value.allGPSData),
        'allGasAdjustedTPSData': AllDataModelAllTPSDataToJSON(value.allGasAdjustedTPSData),
    };
}

