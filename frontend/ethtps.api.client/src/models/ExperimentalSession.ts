/* tslint:disable */
/* eslint-disable */
/**
 * ETHTPS.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Experiment } from './Experiment';
import {
    ExperimentFromJSON,
    ExperimentFromJSONTyped,
    ExperimentToJSON,
} from './Experiment';

/**
 * 
 * @export
 * @interface ExperimentalSession
 */
export interface ExperimentalSession {
    /**
     * 
     * @type {number}
     * @memberof ExperimentalSession
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof ExperimentalSession
     */
    experiment?: number;
    /**
     * 
     * @type {string}
     * @memberof ExperimentalSession
     */
    targetIpaddress?: string | null;
    /**
     * 
     * @type {number}
     * @memberof ExperimentalSession
     */
    retentionSeconds?: number;
    /**
     * 
     * @type {Experiment}
     * @memberof ExperimentalSession
     */
    idNavigation?: Experiment;
}

/**
 * Check if a given object implements the ExperimentalSession interface.
 */
export function instanceOfExperimentalSession(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ExperimentalSessionFromJSON(json: any): ExperimentalSession {
    return ExperimentalSessionFromJSONTyped(json, false);
}

export function ExperimentalSessionFromJSONTyped(json: any, ignoreDiscriminator: boolean): ExperimentalSession {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'experiment': !exists(json, 'experiment') ? undefined : json['experiment'],
        'targetIpaddress': !exists(json, 'targetIpaddress') ? undefined : json['targetIpaddress'],
        'retentionSeconds': !exists(json, 'retentionSeconds') ? undefined : json['retentionSeconds'],
        'idNavigation': !exists(json, 'idNavigation') ? undefined : ExperimentFromJSON(json['idNavigation']),
    };
}

export function ExperimentalSessionToJSON(value?: ExperimentalSession | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'experiment': value.experiment,
        'targetIpaddress': value.targetIpaddress,
        'retentionSeconds': value.retentionSeconds,
        'idNavigation': ExperimentToJSON(value.idNavigation),
    };
}

