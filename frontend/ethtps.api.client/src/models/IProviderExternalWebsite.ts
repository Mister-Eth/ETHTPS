/* tslint:disable */
/* eslint-disable */
/**
 * ETHTPS.info API
 * Backend definition for ethtps.info; you\'re free to play around
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IProviderExternalWebsite
 */
export interface IProviderExternalWebsite {
    /**
     * 
     * @type {string}
     * @memberof IProviderExternalWebsite
     */
    url?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IProviderExternalWebsite
     */
    name?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IProviderExternalWebsite
     */
    iconBase64?: string | null;
    /**
     * 
     * @type {number}
     * @memberof IProviderExternalWebsite
     */
    category?: number;
    /**
     * 
     * @type {number}
     * @memberof IProviderExternalWebsite
     */
    id?: number;
}

/**
 * Check if a given object implements the IProviderExternalWebsite interface.
 */
export function instanceOfIProviderExternalWebsite(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function IProviderExternalWebsiteFromJSON(json: any): IProviderExternalWebsite {
    return IProviderExternalWebsiteFromJSONTyped(json, false);
}

export function IProviderExternalWebsiteFromJSONTyped(json: any, ignoreDiscriminator: boolean): IProviderExternalWebsite {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'url': !exists(json, 'url') ? undefined : json['url'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'iconBase64': !exists(json, 'iconBase64') ? undefined : json['iconBase64'],
        'category': !exists(json, 'category') ? undefined : json['category'],
        'id': !exists(json, 'id') ? undefined : json['id'],
    };
}

export function IProviderExternalWebsiteToJSON(value?: IProviderExternalWebsite | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'url': value.url,
        'name': value.name,
        'iconBase64': value.iconBase64,
        'category': value.category,
        'id': value.id,
    };
}

