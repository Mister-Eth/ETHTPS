/* tslint:disable */
/* eslint-disable */
/**
 * ETHTPS.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProviderExternalWebsite
 */
export interface ProviderExternalWebsite {
    /**
     * 
     * @type {string}
     * @memberof ProviderExternalWebsite
     */
    websiteName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProviderExternalWebsite
     */
    category?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProviderExternalWebsite
     */
    url?: string | null;
    /**
     * 
     * @type {string}
     * @memberof ProviderExternalWebsite
     */
    iconBase64?: string | null;
}

/**
 * Check if a given object implements the ProviderExternalWebsite interface.
 */
export function instanceOfProviderExternalWebsite(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ProviderExternalWebsiteFromJSON(json: any): ProviderExternalWebsite {
    return ProviderExternalWebsiteFromJSONTyped(json, false);
}

export function ProviderExternalWebsiteFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProviderExternalWebsite {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'websiteName': !exists(json, 'websiteName') ? undefined : json['websiteName'],
        'category': !exists(json, 'category') ? undefined : json['category'],
        'url': !exists(json, 'url') ? undefined : json['url'],
        'iconBase64': !exists(json, 'iconBase64') ? undefined : json['iconBase64'],
    };
}

export function ProviderExternalWebsiteToJSON(value?: ProviderExternalWebsite | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'websiteName': value.websiteName,
        'category': value.category,
        'url': value.url,
        'iconBase64': value.iconBase64,
    };
}

