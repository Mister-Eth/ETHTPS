/* tslint:disable */
/* eslint-disable */
/**
 * ETHTPS.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { LegendModel } from './LegendModel';
import {
    LegendModelFromJSON,
    LegendModelFromJSONTyped,
    LegendModelToJSON,
} from './LegendModel';

/**
 * 
 * @export
 * @interface StreamchartModel
 */
export interface StreamchartModel {
    /**
     * 
     * @type {LegendModel}
     * @memberof StreamchartModel
     */
    legend?: LegendModel;
    /**
     * 
     * @type {Array<Array<number>>}
     * @memberof StreamchartModel
     */
    tpsData?: Array<Array<number>> | null;
    /**
     * 
     * @type {Array<Array<number>>}
     * @memberof StreamchartModel
     */
    gpsData?: Array<Array<number>> | null;
    /**
     * 
     * @type {Array<Array<number>>}
     * @memberof StreamchartModel
     */
    gtpsData?: Array<Array<number>> | null;
}

/**
 * Check if a given object implements the StreamchartModel interface.
 */
export function instanceOfStreamchartModel(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function StreamchartModelFromJSON(json: any): StreamchartModel {
    return StreamchartModelFromJSONTyped(json, false);
}

export function StreamchartModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): StreamchartModel {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'legend': !exists(json, 'legend') ? undefined : LegendModelFromJSON(json['legend']),
        'tpsData': !exists(json, 'tpsData') ? undefined : json['tpsData'],
        'gpsData': !exists(json, 'gpsData') ? undefined : json['gpsData'],
        'gtpsData': !exists(json, 'gtpsData') ? undefined : json['gtpsData'],
    };
}

export function StreamchartModelToJSON(value?: StreamchartModel | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'legend': LegendModelToJSON(value.legend),
        'tpsData': value.tpsData,
        'gpsData': value.gpsData,
        'gtpsData': value.gtpsData,
    };
}

