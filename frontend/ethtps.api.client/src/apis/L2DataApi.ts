/* tslint:disable */
/* eslint-disable */
/**
 * ETHTPS.info API
 * Backend definition for ethtps.info; you\'re free to play around
 *
 * The version of the OpenAPI document: v3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DataType,
  L2DataRequestModel,
  L2DataResponseModel,
  ValidationResult,
} from '../models';
import {
    DataTypeFromJSON,
    DataTypeToJSON,
    L2DataRequestModelFromJSON,
    L2DataRequestModelToJSON,
    L2DataResponseModelFromJSON,
    L2DataResponseModelToJSON,
    ValidationResultFromJSON,
    ValidationResultToJSON,
} from '../models';

export interface ApiV3L2DataGetPostRequest {
    xAPIKey?: string;
    dataType?: DataType;
    l2DataRequestModel?: L2DataRequestModel;
}

/**
 * 
 */
export class L2DataApi extends runtime.BaseAPI {

    /**
     */
    async apiV3L2DataGetPostRaw(requestParameters: ApiV3L2DataGetPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<L2DataResponseModel>> {
        const queryParameters: any = {};

        if (requestParameters.dataType !== undefined) {
            queryParameters['dataType'] = requestParameters.dataType;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json-patch+json';

        if (requestParameters.xAPIKey !== undefined && requestParameters.xAPIKey !== null) {
            headerParameters['X-API-Key'] = String(requestParameters.xAPIKey);
        }

        const response = await this.request({
            path: `/api/v3/L2Data/Get`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: L2DataRequestModelToJSON(requestParameters.l2DataRequestModel),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => L2DataResponseModelFromJSON(jsonValue));
    }

    /**
     */
    async apiV3L2DataGetPost(requestParameters: ApiV3L2DataGetPostRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<L2DataResponseModel> {
        const response = await this.apiV3L2DataGetPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
