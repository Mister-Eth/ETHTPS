/* tslint:disable */
/* eslint-disable */
/**
 * ETHTPS.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Apikey } from './Apikey';
import {
    ApikeyFromJSON,
    ApikeyFromJSONTyped,
    ApikeyToJSON,
} from './Apikey';
import type { Experiment } from './Experiment';
import {
    ExperimentFromJSON,
    ExperimentFromJSONTyped,
    ExperimentToJSON,
} from './Experiment';

/**
 * 
 * @export
 * @interface ApikeyExperimentBinding
 */
export interface ApikeyExperimentBinding {
    /**
     * 
     * @type {number}
     * @memberof ApikeyExperimentBinding
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof ApikeyExperimentBinding
     */
    experimentId?: number;
    /**
     * 
     * @type {number}
     * @memberof ApikeyExperimentBinding
     */
    apikeyId?: number;
    /**
     * 
     * @type {Apikey}
     * @memberof ApikeyExperimentBinding
     */
    apikey?: Apikey;
    /**
     * 
     * @type {Experiment}
     * @memberof ApikeyExperimentBinding
     */
    experiment?: Experiment;
}

/**
 * Check if a given object implements the ApikeyExperimentBinding interface.
 */
export function instanceOfApikeyExperimentBinding(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ApikeyExperimentBindingFromJSON(json: any): ApikeyExperimentBinding {
    return ApikeyExperimentBindingFromJSONTyped(json, false);
}

export function ApikeyExperimentBindingFromJSONTyped(json: any, ignoreDiscriminator: boolean): ApikeyExperimentBinding {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'experimentId': !exists(json, 'experimentId') ? undefined : json['experimentId'],
        'apikeyId': !exists(json, 'apikeyId') ? undefined : json['apikeyId'],
        'apikey': !exists(json, 'apikey') ? undefined : ApikeyFromJSON(json['apikey']),
        'experiment': !exists(json, 'experiment') ? undefined : ExperimentFromJSON(json['experiment']),
    };
}

export function ApikeyExperimentBindingToJSON(value?: ApikeyExperimentBinding | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'experimentId': value.experimentId,
        'apikeyId': value.apikeyId,
        'apikey': ApikeyToJSON(value.apikey),
        'experiment': ExperimentToJSON(value.experiment),
    };
}

