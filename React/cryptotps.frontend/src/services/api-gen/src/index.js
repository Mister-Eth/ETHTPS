/**
 * ETHTPS.API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AllDataModel from './model/AllDataModel';
import BlockInfoProviderStatus from './model/BlockInfoProviderStatus';
import BlockInfoProviderStatusResult from './model/BlockInfoProviderStatusResult';
import ChartData from './model/ChartData';
import DataPoint from './model/DataPoint';
import DataResponseModel from './model/DataResponseModel';
import DataType from './model/DataType';
import HomePageResponseModel from './model/HomePageResponseModel';
import ProviderModel from './model/ProviderModel';
import ProviderResponseModel from './model/ProviderResponseModel';
import TimeInterval from './model/TimeInterval';
import TimeWarpSyncProgressModel from './model/TimeWarpSyncProgressModel';
import FeatureApi from './api/FeatureApi';
import GPSApi from './api/GPSApi';
import GasAdjustedTPSApi from './api/GasAdjustedTPSApi';
import GeneralApi from './api/GeneralApi';
import PageModelApi from './api/PageModelApi';
import StatusApi from './api/StatusApi';
import TPSApi from './api/TPSApi';
import TimeWarpApi from './api/TimeWarpApi';


/**
* JS API client generated by OpenAPI Generator.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var EthtpsApi = require('index'); // See note below*.
* var xxxSvc = new EthtpsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new EthtpsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new EthtpsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new EthtpsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AllDataModel model constructor.
     * @property {module:model/AllDataModel}
     */
    AllDataModel,

    /**
     * The BlockInfoProviderStatus model constructor.
     * @property {module:model/BlockInfoProviderStatus}
     */
    BlockInfoProviderStatus,

    /**
     * The BlockInfoProviderStatusResult model constructor.
     * @property {module:model/BlockInfoProviderStatusResult}
     */
    BlockInfoProviderStatusResult,

    /**
     * The ChartData model constructor.
     * @property {module:model/ChartData}
     */
    ChartData,

    /**
     * The DataPoint model constructor.
     * @property {module:model/DataPoint}
     */
    DataPoint,

    /**
     * The DataResponseModel model constructor.
     * @property {module:model/DataResponseModel}
     */
    DataResponseModel,

    /**
     * The DataType model constructor.
     * @property {module:model/DataType}
     */
    DataType,

    /**
     * The HomePageResponseModel model constructor.
     * @property {module:model/HomePageResponseModel}
     */
    HomePageResponseModel,

    /**
     * The ProviderModel model constructor.
     * @property {module:model/ProviderModel}
     */
    ProviderModel,

    /**
     * The ProviderResponseModel model constructor.
     * @property {module:model/ProviderResponseModel}
     */
    ProviderResponseModel,

    /**
     * The TimeInterval model constructor.
     * @property {module:model/TimeInterval}
     */
    TimeInterval,

    /**
     * The TimeWarpSyncProgressModel model constructor.
     * @property {module:model/TimeWarpSyncProgressModel}
     */
    TimeWarpSyncProgressModel,

    /**
    * The FeatureApi service constructor.
    * @property {module:api/FeatureApi}
    */
    FeatureApi,

    /**
    * The GPSApi service constructor.
    * @property {module:api/GPSApi}
    */
    GPSApi,

    /**
    * The GasAdjustedTPSApi service constructor.
    * @property {module:api/GasAdjustedTPSApi}
    */
    GasAdjustedTPSApi,

    /**
    * The GeneralApi service constructor.
    * @property {module:api/GeneralApi}
    */
    GeneralApi,

    /**
    * The PageModelApi service constructor.
    * @property {module:api/PageModelApi}
    */
    PageModelApi,

    /**
    * The StatusApi service constructor.
    * @property {module:api/StatusApi}
    */
    StatusApi,

    /**
    * The TPSApi service constructor.
    * @property {module:api/TPSApi}
    */
    TPSApi,

    /**
    * The TimeWarpApi service constructor.
    * @property {module:api/TimeWarpApi}
    */
    TimeWarpApi
};
